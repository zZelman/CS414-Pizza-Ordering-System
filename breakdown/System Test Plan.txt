After diagramming has been completed, we elected to go with a test first development methodology.
The fundamental ideology is to begin with unit tests.
	These tests will ensure basic logical soundness of all branches of the code.
	We will also endeavour to make sure the inputs are sanity tested with boundary tests, which have the purpose of accepting sane inputs and being capable of dealing with edge cases.
	These will be covered in the testing section 1.
After unit tests have been completed, the next task is to ensure the system functions properly with system tests.
	The ideology behind these tests is so ensure that the system in its entirety is functioning as expected, producing expected results.
	These will be covered in the testing section 2.
	

Testing Section 1.
	These tests are automated, they will not involve entering in physical input, simply running the JUnit test cases we developed for our software.
	These tests are located at CS414-Pizza-Ordering-System/src/test/java
	The tester may simply run the JUnit tests for this section.
		The JUnit testing suites are :
			TestItem
			TestLedger
			TestMenu
			TestSale
			TestPizzaSystem

Testing Section 2.
	These test are non-automated, these will involve the tester physically entering the inputs and actually using the software we have developed.
	These tests will be done with the software running.
		First we will do a system test of the Manager's view of the software via the ManagerGui
			1. The manager must first decide to create a menu.
				The standard input for a menu creation is :name of the menu, description of the menu (for example : "pizza,pizza")
				to accomplish this, the manager types into the text box at the top left of the application and then hits the create menu button
					
			2. The manager must then begin to add items into the system.
				The standard input for a system item creation is :Name,Description,Price (for example : "Cheese,Cheese,2.15")
				To accomplish this, the manager types into the text box at the top left of the application and then hits the create item button
				the expected result is the item created ( with proper syntax ) will appear on the right side of the screen on the existing items list
			
			3. The manager must then add an item to the menu he has created with an item he has created.
				The standard input for adding to menu is :Name,Menu Name (for example : "Cheese,Pizza")
				To accomplish this, the manager types into the text box at the top left of the application and then hits the add to menu button
				the expected result is the selected item will appear on the left side of the screen on the menu
				
			4. The Manager must(if he so chooses) then remove an item from the menu.
				The standard input for removing an item from the menu is : Name,Menu Name (for example : "Cheese,Pizza")
				To accomplish this, the manager types into the text box at the top left of the application and then hits the remove from menu button
					The item the manager wishes to remove from the menu must exist on the menu he wishes to remove it from if he wants something to happen
				the expected result is for the item selected to be removed from the menu on the left portion of the screeen.
				
			5. The Manager must(if he so chooses) then delete an item from the list of existing items.
				The standard input for deleting an item from the system is : Name (For example : "Cheese")
				To accomplish this, the manager types into the text box at the top left of the application and then hits the delete item button
					The item the manager wishes to delete must be in the list of existing items if he wishes something to happen
				the expected result is for the item selected to be removed from the existing items list on the right side of the screen.
				
			6. The manager must then set a special for the day.
				The standard input for seting a special for the day is : Name,Menu Name (For example "Cheese,Pizza")
				To accomplish this, the manager types into the text box at the top left of the application and then hits the set special button
					The item the manager wishes to make the special must be included in the menu if he wants anything to happen
					
			in order to test the next portion of the application, a menu must be built with items on it via the steps given above, We reccomend 
			at least 2 items on the menu before continuing to the second phase of testing.

			
		Second we will do a system test of a potential customer's (user) view of the software via the KioskGui
			1. The User must first decide to start an order.
				The standard input for starting an order is : hitting the Start Order button at the top of the application.
				
			2. The user must then decide what item from the menu he wishes to purchase.
				The way to do this is to click on the item from the menu and then hit the add to order button
				The user may do this multiple times.
				The expected result is the selected item appearing on the order window on the right side of the application.
				 
			3. The user must(if he so chooses) then decide to remove an item from his order.
				The way to do this is to click on the item from his order and hit the remove from order button
				the expected result is the selected item disappearing from the order window on the right side of the application.
				
			4. The user must then input how much he wishes to pay for the order
				The standard input for inputting payment is a (Double) number (For example :"20.15")
				The user must pay at least as much as the order cost is, which is shown on the application if he wishes to submit this order.
				
				
			in order to test the next portion of the application, an order must be filed into the system via the steps given above, We reccomend at least 2 orders
			before continuing to the third phase of testing.
				
		Finally we will do a system test of the Chef's view of the software via the ChefGui
			1. The chef must first decide to get an order.
				The way to do this is to click on the get order button on the bottom left side of the application.
				an order must exist for one to be displayed
				
			2. After the chef is done with the order, he must complete the order.
				The way to do this is to click on the complete order button on the bottom right side of the application.